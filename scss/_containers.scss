// Require previous definition of (size) $_containers_base_margin.
// Require previous definition of (size) $_containers_base_padding.

%general_container {
    margin-top: $_containers_base_margin_top;
    margin-right: $_containers_base_margin_right;
    margin-bottom: $_containers_base_margin_bottom;
    margin-left: $_containers_base_margin_left;
    padding-top: $_containers_base_padding_top;
    padding-right: $_containers_base_padding_right; 
    padding-bottom: $_containers_base_padding_bottom;
    padding-left: $_containers_base_padding_left;
    clear: both;
}

.ases-container{
    @extend %general_container;
    @each $_col_space in $_grid_base{

        $col_namespace: nth($_col_space, 1);
        $min_width: nth($_col_space, 2);
        $max_width: nth($_col_space, 3);

        @if $max-width == 'inf' {
            @media(min-width: #{$min_width}) {
                width: (  $min_width * 0.975 );
            }
        } @else{
            @media(min-width: #{$min_width}) and (max-width: #{$max_width})  {
                width: (  $max_width * 0.81 );
            }
        }
    }
}

.ases-container-fluid{
    @extend %general_container;
}

.ases-container::after,
.ases-container::before,
.ases-container-fluid::after,
.ases-container-fluid::before{
    clear: both;
}